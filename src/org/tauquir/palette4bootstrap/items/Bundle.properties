# palette4bootstrap - A netbeans palette plugin for the Bootstrap
# Copyright (c) 2017-2018 Tauquir Ahmed (tauquirahmed93@gmail.com)
# Licensed under the MIT License.

OpenIDE-Module-Display-Category=Web Applications
OpenIDE-Module-Long-Description=\
    This is a module for the NetBeans IDE which adds new palettes inside the HTML palette. \
    Access the palette from the menu bar -> Window -> IDE Tools -> Palette or using shortcut Ctrl+Shift+8 after opening any html based file inside the Editor Window. \
    After that, you can drag'n'drop the items into your HTML files. \
    An option panel is then shown for the supported components where various attributes can be configured and live preview can be seen for the components.
OpenIDE-Module-Name=palette4bootstrap
OpenIDE-Module-Short-Description=A Netbeans IDE palette plugin for the Twitter Bootstrap Framework

# Global Strings
Customizer.InsertPrefix=Insert
Customizer.GeneratedCode=Generated code
Customizer.Preview=Preview
Customizer.None=None
Customizer.OK=OK
Customizer.Cancel=Cancel
Customizer.Browse=Browse

# Strings for Blank Page Palette
UI.BLANKPAGE.NAME=Blank Page
UI.BLANKPAGE.HINT=\
<html>\
Creates a blank bootstrap HTML page with option to select necessary css and javascript imports.\
<br>\
Drag into a completely blank file\
\
</html>

# Strings for Grid Row palette
GRID.GRIDROW.NAME=Row
GRID.GRIDROW.HINT=\
<html>\
This is the Bootstrap Row component.<br>\
This is a fundamental building block of the responsive grid.<br>\
Place Rows inside Containers, and drop Columns inside them to build a responsive page.<br>\
</html>

# Strings for Grid Column palette
GRID.GRIDCOL.NAME=Column
GRID.GRIDCOL.HINT=\
<html>\
This is the Bootstrap Column component.<br>\
This is the fundamental building block of the responsive grid.<br>\
Place columns inside Rows and control their width with the col-* responsive classes.<br>\
There are lots of responsive options available in the dialog that appears.\<br>\
</html>

# Strings for Grid ClearFix
GRID.GRIDCLEARFIX.NAME=Clearfix
GRID.GRIDCLEARFIX.HINT=\
<html>\
This is Bootstrap's Clearfix component<br>\
Place it inside a Row to break columns into separate lines.<br>\
Use the Visibility in the Options panel to control when Clearfix is active.<br>\
</html>

# Strings for Headings
TYPOGRAPHY.HEADING.NAME=Heading
TYPOGRAPHY.HEADING.HINT=This is the html heading component - from <h1> to <h6>

# Strings for Paragraph
TYPOGRAPHY.PARAGRAPH.NAME=Paragraph
TYPOGRAPHY.PARAGRAPH.HINT=\
<html>\
This is the standard &lt;p&gt; element which<br>\
can be styled by using bootstrap classes<br>\
in the options that appear.\
</html>

# Strings for Alert
TYPOGRAPHY.ALERT.NAME=Alert
TYPOGRAPHY.ALERT.HINT=\
<html>\
This is used to create contextual alert messages like<br>\
success, warning, info and error. It can also have<br>\
an optional dismiss button and several other options.\
</html>

# Strings for Blockquote
TYPOGRAPHY.BLOCKQUOTE.NAME=Blockquote
TYPOGRAPHY.BLOCKQUOTE.HINT=\
<html>\
The HTML <blockquote> tag is used for indicating multiline quotations.<br>\
It should contain only block-level elements within it(like &lt;p&gt;),<br>\
and not just plain text.\
</html>

# Strings for TypeMore
TYPOGRAPHY.MORE.NAME=More
TYPOGRAPHY.MORE.HINT=\
<html>\
Create other typography related elements like &lt;small&gt;,<br>\
&lt;strong&gt;, &lt;em&gt;, &lt;mark&gt;, &lt;span&gt;, etc<br>\
</html>

# Strings for Image
IMAGES.IMAGE.NAME=Image
IMAGES.IMAGE.HINT=\
<html>\
This is the html &lt;img&gt; tag. Use this to insert<br>\
images into your document<br>\
</html>

# Strings for BlankPageCustomizer.java
BlankPageCustomizer.jLabel1.text=Page Title
BlankPageCustomizer.jLabel2.text=Bootstrap CSS
BlankPageCustomizer.jLabel3.text=Bootstrap JS
BlankPageCustomizer.jLabel4.text=Theme(optional)
BlankPageCustomizer.jLabel5.text=Jquery JS
BlankPageCustomizer.jTitleField.toolTipText=This is inserted between the <title> and </title> tags
BlankPageCustomizer.jMainCSS.toolTipText=<html>Path to bootstrap.min.css or bootstrap.css file.<br>This may be absolute, relative or url path.<br>By default, link to MaxCDN is provided.<br>Leave blank if you wish to not include it.</html>
BlankPageCustomizer.jJQueryJS.toolTipText=<html>Path to jQuery.min.js or jQuery.js file.<br>This may be absolute, relative or url path.<br>By default, googleCDN jQuery link is provided.<br>Leave blank if you wish to not include it.</html>
BlankPageCustomizer.jMainJS.toolTipText=<html>Path to bootstrap.min.js or bootstrap.js file.<br>Adds support to bootstrap javascript plugin.<br>This may be absolute, relative or url path.<br>By default, maxCDN link is provided.<br>Leave blank if you wish to not include it.</html>
BlankPageCustomizer.jThemeCSS.toolTipText=<html>Path to the optional bootstrap-theme.min.css<br>or bootstrap-theme.css file.<br>This may be absolute, relative or url path.<br>By default, link to MaxCDN is provided.<br>Leave blank if you wish to not include it.</html>
BlankPageCustomizer.jSupportOldIE.text=Add support files for older Internet Explorer browsers
BlankPageCustomizer.jSupportOldIE.toolTipText=<html>This adds HTML5 shim and Respond.js to the &lt;head&gt; for<br>IE8 support of HTML5 elements and media queries<br>WARNING: Respond.js doesn't work if you view the page via file://</html>
BlankPageCustomizer.jAddContainer.text=Add container inside body tag
BlankPageCustomizer.jAddContainer.toolTipText=<html>Bootstrap requires a containing element to wrap site contents.<br>There are two container classes to choose from:<ol><li>The .container class provides a responsive fixed width container</li><li>The .container-fluid class provides a full width container, spanning the entire width of the viewport</li></ol>Note: Containers are not nestable (you cannot put a container inside another container).</html>
BlankPageCustomizer.FileChooser.ApproveButtonText=Select
BlankPageCustomizer.FileChooser.Title=Select

# Strings for GridColCustomizer.java
GridColCustomizer.jPanel1.TabConstraints.tabTitle=Basic
GridColCustomizer.jPanel2.TabConstraints.tabTitle=Advanced
GridColCustomizer.jLabel1.text=Column Size:
GridColCustomizer.jLabel1.toolTipText=The minimum viewport size below which the column will become stacked
GridColCustomizer.jLabel2.text=Column Weight:
GridColCustomizer.jLabel2.toolTipText=This is the width of the column
GridColCustomizer.jLabel4.text=Column Size
GridColCustomizer.jLabel9.text=Column Offset
GridColCustomizer.jLabel14.text=Column Push
GridColCustomizer.jLabel19.text=Column Pull
GridColCustomizer.jLabel9.toolTipText=\
<html>\
Move columns to the right using .col-*-offset-* classes.<br>\
These classes increase the left margin of a column by * columns.\
</html>
GridColCustomizer.jLabel14.toolTipText=\
<html>\
Change the order of columns by using col-*-push-*<br>\
to push the column to the right by * columns\
</html>
GridColCustomizer.jLabel19.toolTipText=\
<html>\
Change the order of columns by using col-*-pull-*<br>\
to pull the column to the left by * columns\
</html>


# Strings for GridClearFixCustomizer.java
GridClearFixCustomizer.jCheckBox1.toolTipText=Hide this on phones
GridClearFixCustomizer.jCheckBox2.toolTipText=Hide this on tablets
GridClearFixCustomizer.jCheckBox3.toolTipText=Hide this on desktops
GridClearFixCustomizer.jCheckBox4.toolTipText=Hide this on large desktops

# Strings for HeadingCustomizer.java
HeadingCustomizer.jLabel3.text=Text
HeadingCustomizer.jLabel4.text=Type
HeadingCustomizer.jLabel5.text=Alignment
HeadingCustomizer.jLabel6.text=Transformation
HeadingCustomizer.jLabel7.text=Text Color
HeadingCustomizer.jLabel8.text=Background
HeadingCustomizer.nowrapCheckBox.text=No Wrap
HeadingCustomizer.headingText.toolTipText=The text which will appear inside the heading
HeadingCustomizer.headingType.toolTipText=The type of heading - from <h1> to <h6>
HeadingCustomizer.jComboBox3.toolTipText=Contextual colors convey meaning through color with a handful of emphasis utility classes.
HeadingCustomizer.jComboBox1.toolTipText=Easily realign text to components with these classes.
HeadingCustomizer.jComboBox2.toolTipText=Transform text in components with text capitalization classes
HeadingCustomizer.jComboBox4.toolTipText=Similar to the contextual text color classes, easily set the background of an element to any contextual class.
HeadingCustomizer.nowrapCheckBox.toolTipText=\
<html>Sequences of whitespace will collapse into a single whitespace.<br>\
Text will never wrap to the next line.<br>\
The text continues on the same line until a &lt;br&gt; tag is encountered<br>\
</html>

# Strings for ParagraphCustomizer.java
ParagraphCustomizer.jLabel3.text=Text
ParagraphCustomizer.jLabel5.text=Alignment
ParagraphCustomizer.jLabel6.text=Transformation
ParagraphCustomizer.jLabel7.text=Text Color
ParagraphCustomizer.jLabel8.text=Background
ParagraphCustomizer.nowrapCheckBox.toolTipText=<html>Sequences of whitespace will collapse into a single whitespace.<br>Text will never wrap to the next line.<br>The text continues on the same line until a &lt;br&gt; tag is encountered<br></html>
ParagraphCustomizer.nowrapCheckBox.text=No Wrap
ParagraphCustomizer.leadCheckBox.text=Lead
ParagraphCustomizer.paragraphText.toolTipText=The text which will appear inside the paragraph tag
ParagraphCustomizer.alignmentComboBox.toolTipText=Easily realign text to components with these classes.
ParagraphCustomizer.transformationComboBox.toolTipText=Transform text in components with text capitalization classes
ParagraphCustomizer.textColorComboBox.toolTipText=Contextual colors convey meaning through color with a handful of emphasis utility classes.
ParagraphCustomizer.bgColorComboBox.toolTipText=Similar to the contextual text color classes, easily set the background of an element to any contextual class.
ParagraphCustomizer.leadCheckBox.toolTipText=Make a paragraph stand out by adding lead

# Strings for AlertCustomizer.java
AlertCustomizer.jLabel6.text=Transformation
AlertCustomizer.jLabel5.text=Text Alignment
AlertCustomizer.jLabel4.text=Alert Type
AlertCustomizer.jLabel3.text=Alert Text
AlertCustomizer.alertText.toolTipText=The text which will appear inside the alert box
AlertCustomizer.textAlignComboBox.toolTipText=Easily realign text to components with these classes.
AlertCustomizer.alertType.toolTipText=The type of alert to generate
AlertCustomizer.addCloseBtnCheckBox.toolTipText=Makes the alert dismissable by adding a close button
AlertCustomizer.addCloseBtnCheckBox.text=Add close button
AlertCustomizer.transformationComboBox.toolTipText=Transform text in components with text capitalization classes
AlertCustomizer.nowrapCheckBox.toolTipText=<html>Sequences of whitespace will collapse into a single whitespace.<br>Text will never wrap to the next line.<br>The text continues on the same line until a &lt;br&gt; tag is encountered<br></html>
AlertCustomizer.nowrapCheckBox.text=No Wrap

# Strings for BlockquoteCustomizer.java
BlockquoteCustomizer.jLabel3.text=Blockquote Text
BlockquoteCustomizer.jLabel4.text=Alignment Type
BlockquoteCustomizer.alignmentComboBox.toolTipText=Show the quote on the right or on the left
BlockquoteCustomizer.showFooterCheckBox.text=Show Footer
BlockquoteCustomizer.blockquoteText.toolTipText=The text which will appear inside the blockquote
BlockquoteCustomizer.footerText.toolTipText=This is the text which appears on the blockquote footer
BlockquoteCustomizer.showFooterCheckBox.toolTipText=Uncheck if footer is not required

# Strings for TypeMoreCustomizer.java
TypeMoreCustomizer.jLabel8.text=Background
TypeMoreCustomizer.jLabel7.text=Text Color
TypeMoreCustomizer.jLabel4.text=Type
TypeMoreCustomizer.jLabel3.text=Text
TypeMoreCustomizer.jLabel6.text=Transformation
TypeMoreCustomizer.textBox.toolTipText=The text which will appear inside the element
TypeMoreCustomizer.elementType.toolTipText=The type of element
TypeMoreCustomizer.textColor.toolTipText=Contextual colors convey meaning through color with a handful of emphasis utility classes.
TypeMoreCustomizer.bgColor.toolTipText=Similar to the contextual text color classes, easily set the background of an element to any contextual class.
TypeMoreCustomizer.textTransformation.toolTipText=Transform text in components with text capitalization classes
TypeMoreCustomizer.elementInfo.small=\
<html>\
<b>Small</b>-<br>\
The HTML &lt;small&gt; element is used to create lighter, secondary texts. In bootstrap, this is set to 85% of the size of the parent.\
</html>
TypeMoreCustomizer.elementInfo.strong=\
<html>\
<b>Strong</b>-<br>\
The HTML &lt;strong&gt; element makes the text within it bold, with added semantic meaning of being important.\
</html>
TypeMoreCustomizer.elementInfo.b=\
<html>\
<b>Bold</b>-<br>\
The HTML &lt;b&gt; element makes the text within it bold without adding to it any semantic meanings.\
</html>
TypeMoreCustomizer.elementInfo.em=\
<html>\
<b>Emphasize</b>-<br>\
The HTML &lt;em&gt; element makes the text within it italic, with added semantic meaning of being emphasized.\
</html>
TypeMoreCustomizer.elementInfo.i=\
<html>\
<b>Italic</b>-<br>\
The HTML &lt;i&gt; element makes the text within it italic without adding to it any semantic meanings.\
</html>
TypeMoreCustomizer.elementInfo.del=\
<html>\
<b>Deleted Text</b>-<br>\
Use this tag for indicating blocks of text that have been deleted\
</html>
TypeMoreCustomizer.elementInfo.s=\
<html>\
<b>Strikethrough</b>-<br>\
Use this tag for indicating blocks of text that are no longer relevant\
</html>
TypeMoreCustomizer.elementInfo.ins=\
<html>\
<b>Inserted Text</b>-<br>\
Use this for indicating insertions/additions to the document\
</html>
TypeMoreCustomizer.elementInfo.u=\
<html>\
<b>Underline</b>-<br>\
Use this to underline a text\
</html>
TypeMoreCustomizer.elementInfo.mark=\
<html>\
<b>Marked Text</b>-<br>\
The HTML &lt;mark&gt; element is used to mark/highlight the text within it\
</html>
TypeMoreCustomizer.elementInfo.span=\
<html>\
<b>Span</b>-<br>\
A &lt;span&gt; element is used to style a part of a text. Unlike <div> tags, these are inline elements.\
</html>
TypeMoreCustomizer.elementInfo.code=\
<html>\
<b>Code</b>-<br>\
Wrap inline snippets of code using this element.\
</html>
TypeMoreCustomizer.elementInfo.kbd=\
<html>\
<b>Keyboard</b>-<br>\
Use this to indicate input that is typically entered via keyboard.\
</html>

# Strings for ImageCustomizer.java
ImageCustomizer.jLabel3.text=Source
ImageCustomizer.jLabel4.text=Alt
ImageCustomizer.jLabel5.text=Width
ImageCustomizer.jLabel6.text=Height
ImageCustomizer.jLabel7.text=Shape
ImageCustomizer.responsiveCheckBox.text=Responsive
ImageCustomizer.FileChooser.Title=Select image
ImageCustomizer.FileChooser.ApproveButtonText=Select
ImageCustomizer.srcTextField.toolTipText=<html>\
<strong>Required</strong><br>\
Source of the image to show<br>\
Can be absolute, relative or a url\
</html>
ImageCustomizer.altTextField.toolTipText=<html>\
<strong>Required</strong><br>\
Defines alternate text, which is shown in place<br>\
of the image in case the image fails to load.<br>\
</html>
ImageCustomizer.widthTextField.toolTipText=<html>\
<strong>Optional</strong><br>\
Intrinsic width of the image<br>\
<em>Note:</em> The width attributes are not intended to be used to stretch the image.\
</html>
ImageCustomizer.heightTextField.toolTipText=<html>\
<strong>Optional</strong><br>\
Intrinsic height of the image<br>\
<em>Note:</em> The height attributes are not intended to be used to stretch the image.\
</html>
ImageCustomizer.shapeSelector.toolTipText=<html>\
Add shape to images using the bootstrap's .img-rounded,<br>\
.img-circle and .img-thumbnail classes\
</html>
ImageCustomizer.responsiveCheckBox.toolTipText=<html>\
Makes the image responsive-friendly by<br>\
adding the bootstrap .img-responsive class\
</html>
