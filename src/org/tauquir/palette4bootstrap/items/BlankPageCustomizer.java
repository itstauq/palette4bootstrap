/*
 * palette4bootstrap - A netbeans palette plugin for the Bootstrap
 * Copyright (c) 2017-2018 Tauquir Ahmed (tauquirahmed93@gmail.com)
 * Licensed under the MIT License.
 */
package org.tauquir.palette4bootstrap.items;

import java.awt.Dialog;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.util.NbBundle;
import org.tauquir.palette4bootstrap.bsPaletteUtilities;

public class BlankPageCustomizer extends javax.swing.JPanel {

    private Dialog dialog = null;
    private DialogDescriptor descriptor = null;
    private boolean dialogOK = false;
    private final JFileChooser imgChooser;
    private final String currentDirectory;
    private final BlankPage page;
    FileNameExtensionFilter jsFileNameExtensionFilter = new FileNameExtensionFilter("JavaScript Files", "js");
    FileNameExtensionFilter cssFileNameExtensionFilter = new FileNameExtensionFilter("Cascading StyleSheets", "css");

    /**
     * Creates new form PAGECustomizer
     */
    public BlankPageCustomizer(BlankPage page, File currentFile) {
        this.page = page;
        currentDirectory = currentFile.getParent();
        initComponents();
        imgChooser = initFileChooser();
    }

    public boolean showDialog() {
        dialogOK = false;
        descriptor = new DialogDescriptor(this, NbBundle.getMessage(getClass(), "Customizer.InsertPrefix")
                + " " + NbBundle.getMessage(getClass(), "UI.BLANKPAGE.NAME"), true,
                DialogDescriptor.OK_CANCEL_OPTION, DialogDescriptor.OK_OPTION,
                new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (descriptor.getValue().equals(DialogDescriptor.OK_OPTION)) {
                    evaluateInput();
                    dialogOK = true;
                }
                dialog.dispose();
            }
        });
        dialog = DialogDisplayer.getDefault().createDialog(descriptor);
        dialog.setResizable(false);
        dialog.setVisible(true);
        return dialogOK;
    }

    private void evaluateInput() {
        page.setPageTitle(jTitleField.getText());
        page.setBootstrapCSS(jMainCSS.getText());
        page.setjQueryJS(jJQueryJS.getText());
        page.setBootstrapJS(jMainJS.getText());
        page.setBootstrapThemeCSS(jThemeCSS.getText());
        page.setContainerType((jAddContainer.isSelected()) ? String.valueOf(jContainerClass.getSelectedItem()) : "");
        page.setAddIEsupport(jSupportOldIE.isSelected());
    }

    private JFileChooser initFileChooser() {
        JFileChooser chooser = new JFileChooser();
        chooser.setApproveButtonText(NbBundle.getMessage(getClass(), "BlankPageCustomizer.FileChooser.ApproveButtonText"));
        chooser.setCurrentDirectory(new File(currentDirectory));
        chooser.setDialogTitle(NbBundle.getMessage(getClass(), "BlankPageCustomizer.FileChooser.Title"));
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        return chooser;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTitleField = new javax.swing.JTextField();
        jMainCSS = new javax.swing.JTextField();
        jJQueryJS = new javax.swing.JTextField();
        jMainJS = new javax.swing.JTextField();
        jThemeCSS = new javax.swing.JTextField();
        jSupportOldIE = new javax.swing.JCheckBox();
        jAddContainer = new javax.swing.JCheckBox();
        jContainerClass = new javax.swing.JComboBox<>();
        mainCssBrowseButton = new javax.swing.JButton();
        jQueryJSBrowseButton = new javax.swing.JButton();
        mainJSBrowseButton = new javax.swing.JButton();
        themeCssBrowseButton = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "BlankPageCustomizer.jLabel1.text")); // NOI18N
        jLabel1.setToolTipText(org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "BlankPageCustomizer.jTitleField.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "BlankPageCustomizer.jLabel2.text")); // NOI18N
        jLabel2.setToolTipText(org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "BlankPageCustomizer.jMainCSS.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "BlankPageCustomizer.jLabel3.text")); // NOI18N
        jLabel3.setToolTipText(org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "BlankPageCustomizer.jMainJS.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "BlankPageCustomizer.jLabel4.text")); // NOI18N
        jLabel4.setToolTipText(org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "BlankPageCustomizer.jThemeCSS.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "BlankPageCustomizer.jLabel5.text")); // NOI18N
        jLabel5.setToolTipText(org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "BlankPageCustomizer.jJQueryJS.toolTipText")); // NOI18N

        jTitleField.setText("Bootstrap Template"); // NOI18N
        jTitleField.setToolTipText(org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "BlankPageCustomizer.jTitleField.toolTipText")); // NOI18N

        jMainCSS.setText("https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"); // NOI18N
        jMainCSS.setToolTipText(org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "BlankPageCustomizer.jMainCSS.toolTipText")); // NOI18N

        jJQueryJS.setText("https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"); // NOI18N
        jJQueryJS.setToolTipText(org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "BlankPageCustomizer.jJQueryJS.toolTipText")); // NOI18N

        jMainJS.setText("https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"); // NOI18N
        jMainJS.setToolTipText(org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "BlankPageCustomizer.jMainJS.toolTipText")); // NOI18N

        jThemeCSS.setText("https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css"); // NOI18N
        jThemeCSS.setToolTipText(org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "BlankPageCustomizer.jThemeCSS.toolTipText")); // NOI18N

        jSupportOldIE.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(jSupportOldIE, org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "BlankPageCustomizer.jSupportOldIE.text")); // NOI18N
        jSupportOldIE.setToolTipText(org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "BlankPageCustomizer.jSupportOldIE.toolTipText")); // NOI18N

        jAddContainer.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(jAddContainer, org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "BlankPageCustomizer.jAddContainer.text")); // NOI18N
        jAddContainer.setToolTipText(org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "BlankPageCustomizer.jAddContainer.toolTipText")); // NOI18N
        jAddContainer.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jAddContainerItemStateChanged(evt);
            }
        });

        jContainerClass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "container", "container-fluid" }));
        jContainerClass.setToolTipText(org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "BlankPageCustomizer.jAddContainer.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(mainCssBrowseButton, org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "Customizer.Browse")); // NOI18N
        mainCssBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainCssBrowseButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jQueryJSBrowseButton, org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "Customizer.Browse")); // NOI18N
        jQueryJSBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jQueryJSBrowseButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(mainJSBrowseButton, org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "Customizer.Browse")); // NOI18N
        mainJSBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainJSBrowseButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(themeCssBrowseButton, org.openide.util.NbBundle.getMessage(BlankPageCustomizer.class, "Customizer.Browse")); // NOI18N
        themeCssBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themeCssBrowseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jAddContainer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jContainerClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTitleField)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jThemeCSS, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jMainJS)
                                            .addComponent(jJQueryJS, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jMainCSS, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jQueryJSBrowseButton, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(mainJSBrowseButton, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(themeCssBrowseButton))
                                            .addComponent(mainCssBrowseButton, javax.swing.GroupLayout.Alignment.TRAILING)))))
                            .addComponent(jSupportOldIE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTitleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jMainCSS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainCssBrowseButton))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jJQueryJS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jQueryJSBrowseButton))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jMainJS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainJSBrowseButton))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jThemeCSS)
                        .addComponent(themeCssBrowseButton))
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(4, 4, 4)
                .addComponent(jSupportOldIE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jContainerClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jAddContainer))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jAddContainerItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jAddContainerItemStateChanged
        jContainerClass.setEnabled(jAddContainer.isSelected());
    }//GEN-LAST:event_jAddContainerItemStateChanged

    private void mainCssBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainCssBrowseButtonActionPerformed
        // clear previous selected file value and filters on reopening file chooser
        imgChooser.setSelectedFile(new File(""));
        imgChooser.resetChoosableFileFilters();
        imgChooser.setFileFilter(cssFileNameExtensionFilter);
        imgChooser.setDialogTitle(NbBundle.getMessage(getClass(), "BlankPageCustomizer.FileChooser.Title") +
                " " + NbBundle.getMessage(getClass(), "BlankPageCustomizer.jLabel2.text"));
        int v = imgChooser.showOpenDialog(this);
        if (v == JFileChooser.APPROVE_OPTION) {
            File file = imgChooser.getSelectedFile();
            String relativePath = bsPaletteUtilities.findRelativePath(file.getAbsolutePath(), currentDirectory);
            jMainCSS.setText(relativePath);
        }
    }//GEN-LAST:event_mainCssBrowseButtonActionPerformed

    private void themeCssBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themeCssBrowseButtonActionPerformed
        // clear previous selected file value and filters on reopening file chooser
        imgChooser.setSelectedFile(new File(""));
        imgChooser.resetChoosableFileFilters();
        imgChooser.setFileFilter(cssFileNameExtensionFilter);
        imgChooser.setDialogTitle(NbBundle.getMessage(getClass(), "BlankPageCustomizer.FileChooser.Title") +
                " " + NbBundle.getMessage(getClass(), "BlankPageCustomizer.jLabel4.text"));
        int v = imgChooser.showOpenDialog(this);
        if (v == JFileChooser.APPROVE_OPTION) {
            File file = imgChooser.getSelectedFile();
            String relativePath = bsPaletteUtilities.findRelativePath(file.getAbsolutePath(), currentDirectory);
            jThemeCSS.setText(relativePath);
        }
    }//GEN-LAST:event_themeCssBrowseButtonActionPerformed

    private void jQueryJSBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jQueryJSBrowseButtonActionPerformed
        // clear previous selected file value and filters on reopening file chooser
        imgChooser.setSelectedFile(new File(""));
        imgChooser.resetChoosableFileFilters();
        imgChooser.setFileFilter(jsFileNameExtensionFilter);
        imgChooser.setDialogTitle(NbBundle.getMessage(getClass(), "BlankPageCustomizer.FileChooser.Title") +
                " " + NbBundle.getMessage(getClass(), "BlankPageCustomizer.jLabel5.text"));
        int v = imgChooser.showOpenDialog(this);
        if (v == JFileChooser.APPROVE_OPTION) {
            File file = imgChooser.getSelectedFile();
            String relativePath = bsPaletteUtilities.findRelativePath(file.getAbsolutePath(), currentDirectory);
            jJQueryJS.setText(relativePath);
        }
    }//GEN-LAST:event_jQueryJSBrowseButtonActionPerformed

    private void mainJSBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainJSBrowseButtonActionPerformed
        // clear previous selected file value and filters on reopening file chooser
        imgChooser.setSelectedFile(new File(""));
        imgChooser.resetChoosableFileFilters();
        imgChooser.setFileFilter(jsFileNameExtensionFilter);
        imgChooser.setDialogTitle(NbBundle.getMessage(getClass(), "BlankPageCustomizer.FileChooser.Title") +
                " " + NbBundle.getMessage(getClass(), "BlankPageCustomizer.jLabel3.text"));
        int v = imgChooser.showOpenDialog(this);
        if (v == JFileChooser.APPROVE_OPTION) {
            File file = imgChooser.getSelectedFile();
            String relativePath = bsPaletteUtilities.findRelativePath(file.getAbsolutePath(), currentDirectory);
            jMainJS.setText(relativePath);
        }
    }//GEN-LAST:event_mainJSBrowseButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jAddContainer;
    private javax.swing.JComboBox<String> jContainerClass;
    private javax.swing.JTextField jJQueryJS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jMainCSS;
    private javax.swing.JTextField jMainJS;
    private javax.swing.JButton jQueryJSBrowseButton;
    private javax.swing.JCheckBox jSupportOldIE;
    private javax.swing.JTextField jThemeCSS;
    private javax.swing.JTextField jTitleField;
    private javax.swing.JButton mainCssBrowseButton;
    private javax.swing.JButton mainJSBrowseButton;
    private javax.swing.JButton themeCssBrowseButton;
    // End of variables declaration//GEN-END:variables
}
